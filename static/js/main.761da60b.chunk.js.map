{"version":3,"sources":["images/RestaurantBG1.jpg","components/Container.js","components/Footer.js","components/Contact.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","oBgImage","backgroundImage","concat","Background","Container","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","makeReservationButton","React","createRef","fnMakeReservation","event","console","log","state","title","react_default","a","createElement","className","style","onClick","ref","margin","src","frameborder","border","allowfullscreen","Component","Footer","href","footerInfo","facebook","instagram","mobileNumber","email","Contact","App","restaurantName","restaurantInfo","address","id","value","timings","react_router_dom","react_router","path","render","components_Container","components_Footer","Boolean","window","location","hostname","match","ReactDOM","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.761da60b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/RestaurantBG1.56dfe7cd.jpg\";","import React from 'react';\nimport Background from '../images/RestaurantBG1.jpg';\n\n//var App = require('./App');\n\nvar oBgImage = {\n    backgroundImage: `url(${Background})`\n};\n  \nclass Container extends React.Component {\n\n    makeReservationButton = React.createRef();\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: 'CHINESE & THAI CUISINE'\n        };\n    }\n\n    // componentDidMount() {\n    //     console.log('starting magic...');\n    //     const animInterval = 50;\n    //     const charsToAdd = 'HINESE & THAI CUISINE'.split('');\n    //     for(let i = 0; i < charsToAdd.length; i++) {\n    //         setTimeout(() => {\n    //             this.setState({\n    //                 title: this.state.title + charsToAdd[i]\n    //             });\n    //         }, i*animInterval);\n    //     }\n    // }\n\n    render() {\n\n        return (\n            <div className=\"homectr\">\n                <div className=\"homectr__text\">\n                    <div className= \"homectr__text--image\" style={ oBgImage }>\n                        <div className=\"homectr__text--image--ctr\">\n                            <div className=\"containerActionButtons\">\n                                <button className=\"btn--ghost\">See Menu</button>\n                                <button className=\"btn--ghost\">Order Online</button>\n                                <button className=\"btn--ghost\" onClick={this.fnMakeReservation} ref={this.makeReservationButton}>Reservations</button>\n                            </div>\n                            <div style={{'margin': 'auto'}}></div>\n                            <div className=\"containerTitle\">\n                                <h1 className=\"animTitle\">{this.state.title}</h1>\n                                <h3>Open Hours</h3>\n                                <p>Monday to Friday: 11:00 a.m. - 10:00 p.m.</p>\n                                <p>Saturday to Sunday: 11:00 a.m. - 12:00 a.m.</p>\n                            </div> \n                        </div>\n                    </div>\n                </div>\n                <div className=\"homectr__map\">\n                    <iframe title=\"google_maps_location\"\n                        src=\"https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d951.6374809379425!2d78.42574155819703!3d17.433374006169466!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x8f385270f319f169!2sHOLY+KITCHEN!5e0!3m2!1sen!2sin!4v1564596642126!5m2!1sen!2sin\"\n                        frameborder=\"0\" style={{'border':0}} allowfullscreen>\n                    </iframe>\n                </div>\n            </div>\n        );\n    }\n\n    fnMakeReservation = (event) => {\n        console.log(this.makeReservationButton);\n        //debugger;\n    };\n}\n\nexport default Container;","import React from 'react';\n\nconst Footer = (props) => {\n    return (\n        <div className=\"footer\">\n            <div className=\"flexColumn followUs\">\n                <span className=\"footerTitle\">Follow Us</span>\n                <div className=\"socialMedia\">\n                    <a href={props.footerInfo.facebook}><i className=\"fa fa-facebook\"></i></a>\n                    <a href={props.footerInfo.instagram}><i className=\"fa fa-instagram\"></i></a>\n                </div>\n            </div>\n            <div className=\"flexColumn contactUs\">\n                <span className=\"footerTitle\">Contact Us</span>\n                <span><i className=\"fa fa-phone\"></i>{props.footerInfo.mobileNumber}</span>\n                <span><i className=\"fa fa-envelope\"></i>{props.footerInfo.email}</span>\n            </div>\n            <div style={{'margin': 'auto'}}></div>\n            <div className=\"signature flexColumn\">\n                <span>Site developed and maintained by Rahul & Ravi.</span>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\n\nconst Contact = (props) => {\n    return (\n        <div className=\"contactContainer\">\n            \n        </div>\n    )\n}\n\nexport default Contact;","import React from 'react';\nimport '../styles/App.scss';\nimport Container from './Container.js';\nimport Footer from './Footer.js';\nimport Contact from './Contact.js'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"restaurantName\": \"The Holy Kitchen\",\n      \"restaurantInfo\": {\n        \"address\": [\n          {\n            \"id\": \"addressLine1\",\n            \"value\": \"Sri Krishna Nagar, Yousufguda\"\n          },\n          {\n            \"id\": \"addressLine2\",\n            \"value\": \"Near Metro Station\"\n          },\n          {\n            \"id\": \"addressLine3\",\n            \"value\": \"Hyderabad\"\n          }\n        ],\n        \"timings\": [\n          {\n            \"id\": \"weekdays\",\n            \"value\": \"Mon - Fri: 11am - 10pm\"\n          },\n          {\n            \"id\": \"weekends\",\n            \"value\": \"Sat - Sun: 11am - 12am\"\n          }\n        ],\n        \"mobileNumber\": \"+91 888 577 3637\",\n        \"email\": \"holykitchenindia@gmail.com\",\n        \"facebook\": \"https://www.facebook.com/theholykitchen/\",\n        \"instagram\": \"https://instagram.com/the.holykitchen?igshid=14r37cffbelj0\"\n      }\n    }\n  }\n  \n  render() {\n    return (\n      <Router>\n        <div id=\"wrapper\">\n          <div className=\"AppContainer\">\n            <Switch>\n              <Route path=\"/home\" render={() => (\n                <Container />\n              )} />\n              <Route path=\"/contact\" Component={Contact} />\n              <Route path=\"/\" render={() => (\n                <Container />\n              )} />\n            </Switch>\n          </div>\n          <footer className=\"AppFooter\">\n            <Footer footerInfo={this.state.restaurantInfo}/>\n          </footer>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}