{"version":3,"sources":["images/RestaurantBG1.jpg","components/Header.js","components/Container.js","components/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","react_default","a","createElement","Navbar","bg","expand","className","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","oContainer","backgroundImage","concat","Background","Container","makeReservationButton","React","createRef","fnMakeReservation","event","console","log","_this","style","Button","variant","onClick","this","ref","Component","Footer","footerInfo","address","map","item","key","value","timings","mobileNumber","email","facebook","instagram","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","restaurantName","restaurantInfo","components_Header","components_Container","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e98b69d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/RestaurantBG1.56dfe7cd.jpg\";","import React from 'react';\nimport { Navbar } from 'react-bootstrap';\nimport { Nav } from 'react-bootstrap';\n\nfunction Header(props) {\n    return (\n        <Navbar bg=\"light\" expand=\"lg\" className=\"headerContainer\">\n            <Navbar.Brand href=\"#home\" className=\"hk-logo\">Holy Kitchen</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"navLinks\">\n                    <Nav.Link className=\"headerNavItem\" href=\"#home\">Home</Nav.Link>\n                    <Nav.Link className=\"headerNavItem\" href=\"#story\">Our Story</Nav.Link>\n                    <Nav.Link className=\"headerNavItem\" href=\"#menu\">Menu</Nav.Link>\n                    <Nav.Link className=\"headerNavItem\" href=\"#contact\">Contact Us</Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n}\n\nexport default Header;","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport Background from '../images/RestaurantBG1.jpg';\n\n//var App = require('./App');\n\nvar oContainer = {\n    backgroundImage: `url(${Background})`\n};\n  \nclass Container extends React.Component {\n\n    makeReservationButton = React.createRef();\n\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {};\n    // }\n\n    render() {\n        return (\n            <section className=\"bgImage\" style={ oContainer }>\n                    <div className= \"containerFlex\">\n                        <div className=\"containerTitle\">\n                            <h1>CHINESE & THAI CUISINE</h1>\n                        </div>  \n                        <div className=\"containerActionButtons\">\n                            <Button variant=\"outline-primary\">See Menu</Button>\n                            <Button variant=\"outline-primary\">Order Online</Button>\n                            <Button variant=\"outline-primary\" onClick={this.fnMakeReservation} ref={this.makeReservationButton}>Reservations</Button>\n                        </div>\n                    </div>\n            </section>\n        );\n    }\n\n    fnMakeReservation = (event) => {\n        console.log(this.makeReservationButton);\n        //debugger;\n    };\n}\n\nexport default Container;","import React from 'react';\n\nconst Footer = (props) => {\n    return (\n        <div className=\"footer\">\n            <div className=\"flexColumn\">\n                <span className=\"footerLogo\">HK</span>\n            </div>\n            <div className=\"verticalLine flexColumn\"></div>\n            <div className=\"flexColumn\">\n                <span className=\"footerTitle\">Address</span>\n                {props.footerInfo.address.map((item) => {\n                    return (<span key={item.id}>{item.value}</span>);\n                })}\n            </div>\n            <div className=\"flexColumn\">\n                <span className=\"footerTitle\">Open Hours</span>\n                {props.footerInfo.timings.map((item) => {\n                    return (<span key={item.id}>{item.value}</span>);\n                })}\n            </div>\n            <div className=\"flexColumn\">\n                <span className=\"footerTitle\">Contact</span>\n                <span>{props.footerInfo.mobileNumber}</span>\n                <span>{props.footerInfo.email}</span>\n            </div>\n            <div className=\"flexColumn\">\n                <span className=\"footerTitle\">Follow Us</span>\n                <div className=\"socialMedia\">\n                    <a href={props.footerInfo.facebook} className=\"fa fa-facebook\"></a>\n                    <a href={props.footerInfo.instagram} className=\"fa fa-instagram\"></a>\n                </div>\n            </div>\n            <div className=\"signature flexColumn\">\n                <span>Site developed and maintained by <a href=\"https://www.linkedin.com/in/rahul-akarapu-aa76a087/\">Rahul Akarapu</a>.</span>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport '../styles/App.css';\nimport Header from './Header.js'\nimport Container from './Container.js'\nimport Footer from './Footer.js'\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"restaurantName\": \"The Holy Kitchen\",\n      \"restaurantInfo\": {\n        \"address\": [\n          {\n            \"id\": \"addressLine1\",\n            \"value\": \"Sri Krishna Nagar, Yousufguda\"\n          },\n          {\n            \"id\": \"addressLine2\",\n            \"value\": \"Near Metro Station\"\n          },\n          {\n            \"id\": \"addressLine2\",\n            \"value\": \"Hyderabad\"\n          }\n        ],\n        \"timings\": [\n          {\n            \"id\": \"weekdays\",\n            \"value\": \"Mon - Fri: 11am - 10pm\"\n          },\n          {\n            \"id\": \"weekends\",\n            \"value\": \"Sat - Sun: 11am - 12am\"\n          }\n        ],\n        \"mobileNumber\": \"+91 888 577 3637\",\n        \"email\": \"holykitchenindia@gmail.com\",\n        \"facebook\": \"https://www.facebook.com/theholykitchen/\",\n        \"instagram\": \"https://instagram.com/the.holykitchen?igshid=14r37cffbelj0\"\n      }\n    }\n  }\n  \n  render() {\n    return (\n      <div id=\"wrapper\">\n        <header className=\"AppHeader\">\n          <Header />\n        </header>\n        <div className=\"AppContainer\">\n          <Container />\n        </div>\n        <footer className=\"AppFooter\">\n          <Footer footerInfo={this.state.restaurantInfo}/>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}